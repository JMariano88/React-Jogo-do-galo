{"version":3,"sources":["Square.js","Board.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","value","Board","status","useState","Array","fill","square","setSquare","X","setX","winner","squares","lines","i","length","a","b","c","calculateWinner","renderSquare","handleClick","slice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wKAWeA,MARf,SAAgBC,GACZ,OACI,8BACI,wBAAQC,UAAU,MAAMC,QAAU,kBAAKF,EAAME,WAA7C,SAAyDF,EAAMG,WCmF5DC,MAtFf,WAEI,IAQIC,EARJ,EAA4BC,mBAASC,MAAM,GAAGC,KAAK,OAAnD,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkBJ,oBAAS,GAA3B,mBAAOK,EAAP,KAAUC,EAAV,KAMMC,EAgCN,SAAyBC,GAWrB,IAVA,IAAMC,EAAO,CACT,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAEDC,EAAE,EAAGA,EAAED,EAAME,OAAQD,IAAI,CAC7B,kBAAeD,EAAMC,GAArB,GAAOE,EAAP,KAASC,EAAT,KAAWC,EAAX,KAEA,GAAGN,EAAQI,IAAMJ,EAAQI,KAAMJ,EAAQK,IAAKL,EAAQI,KAAMJ,EAAQM,GAC9D,OAAON,EAAQI,GAGvB,OAAO,KAlDGG,CAAgBZ,GAG1BJ,EADDQ,EACS,aAAeA,EAEhB,iBAAmBF,EAAG,IAAM,KAQvC,IAAMW,EAAe,SAACN,GAElB,OACI,cAAC,EAAD,CAAQb,MAAOM,EAAOO,GAAId,QAAU,kBAAKqB,EAAYP,OAIvDO,EAAc,SAACP,GACjB,IAAMF,EAAUL,EAAOe,QAEnBX,GAAuB,OAAbC,EAAQE,KAClBF,EAAQE,GAAKL,EAAG,IAAM,IACtBD,EAAUI,GACVF,GAAMD,KA4Bd,OACI,sBAAKV,UAAU,QAAf,UAEI,sBAAKA,UAAU,MAAf,UACKqB,EAAa,GACbA,EAAa,GACbA,EAAa,MAElB,sBAAKrB,UAAU,MAAf,UACKqB,EAAa,GACbA,EAAa,GACbA,EAAa,MAElB,sBAAKrB,UAAU,MAAf,UACKqB,EAAa,GACbA,EAAa,GACbA,EAAa,MAEjBjB,MCvEEoB,MATf,WACE,OACE,sBAAKxB,UAAU,QAAf,UACC,8CACA,cAAC,EAAD,QCIUyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1a0b5e2a.chunk.js","sourcesContent":["import React from 'react'\r\nimport './App.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <div>\r\n            <button className=\"btn\" onClick ={()=> props.onClick()}>{props.value}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Square\r\n","import React, {useState} from 'react'\r\nimport Square from './Square'\r\n\r\nfunction Board() {\r\n    \r\n    const [square, setSquare] = useState(Array(9).fill(null));\r\n    const [X, setX] = useState(true);\r\n   \r\n   \r\n    \r\n\r\n\r\n    const winner= calculateWinner(square)\r\n    let status;\r\n    if(winner){\r\n        status= 'winner is ' + winner\r\n    }else{\r\n        status='player turn: ' + (X? 'X' : 'O' );\r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n\r\n    const renderSquare = (i) => {\r\n        \r\n        return(\r\n            <Square value={square[i]} onClick ={()=> handleClick(i)} />\r\n        )\r\n    }\r\n\r\n    const handleClick = (i) => {\r\n        const squares = square.slice();\r\n        \r\n        if(!winner && squares[i]===null){\r\n            squares[i] = X? 'X' : 'O';\r\n            setSquare(squares);\r\n            setX(!X);\r\n        } \r\n        \r\n       \r\n    }\r\n\r\n    function calculateWinner(squares){\r\n        const lines= [\r\n            [0,1,2],\r\n            [3,4,5],\r\n            [6,7,8],\r\n            [0,3,6],\r\n            [1,4,7],\r\n            [2,5,8],\r\n            [0,4,8],\r\n            [2,4,6]\r\n        ];\r\n        for(let i=0; i<lines.length; i++){\r\n            const [a,b,c]= lines[i];\r\n\r\n            if(squares[a] && squares[a]=== squares[b]&& squares[a]=== squares[c]){\r\n                return squares[a];\r\n            }\r\n        }\r\n        return null;  \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"board\">\r\n\r\n            <div className=\"row\">\r\n                {renderSquare(0)}\r\n                {renderSquare(1)}\r\n                {renderSquare(2)}\r\n            </div>\r\n            <div className=\"row\">\r\n                {renderSquare(3)}\r\n                {renderSquare(4)}\r\n                {renderSquare(5)}\r\n            </div>\r\n            <div className=\"row\">\r\n                {renderSquare(6)}\r\n                {renderSquare(7)}\r\n                {renderSquare(8)}\r\n            </div>\r\n            {status}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board\r\n","import './App.css';\nimport Board from './Board';\nimport './index.css';\n\nfunction App() {\n  return (\n    <div className=\"board\">\n     <h1>Jogo do Galo</h1>\n     <Board/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}